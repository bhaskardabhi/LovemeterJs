// Generated by CoffeeScript 1.10.0
(function() {
  var explodeString;

  explodeString = function(array) {

    /*
    		Example: ["abc d", "a", "a b c d"] -> ["a","b", "c", "d", "a", "a", "b", "c", "d"];
     */
    return array.join('').replace(/\s+/g, '').split('');
  };

  this.lovemeter = function(partner1, partner2) {
    var charArray, count, i, j, lenArray, ref, sumFirstLast, tempResult, wordCount, wordsArray;
    if (!((partner1 != null ? partner1.length : void 0) && (partner2 != null ? partner2.length : void 0))) {
      return 0;
    }

    /*
    		Making Args array and adding "loves" on between two partner name  Example:
    			["Partner 1", "loves", "Partner 2"]
     */
    wordsArray = [partner1, "loves", partner2];

    /* Converting Array to characters */
    charArray = explodeString(wordsArray);

    /*
    		Counting Repeatation of Character in String
     */
    wordCount = [];

    /*
    		Iterating over Each character and removing it as its count is finished and at the end we gonna get empty Array
     */
    while (charArray.length !== 0) {
      count = 1;
      i = 1;
      while (i !== charArray.length) {
        if (charArray[0] === charArray[i]) {
          count++;
          charArray.splice(i, 1);
        } else {
          i++;
        }
      }
      charArray.splice(0, 1);
      wordCount.push(count);
    }

    /*
    		Doing Addition of Words Count to get Result in Range of 0 to 100
     */
    while (wordCount.length !== 2) {
      tempResult = [];
      lenArray = wordCount.length;

      /*
      			For ideal love which is myth ;)
       */
      if (lenArray === 3 && lenArray[1] === 0 && lenArray[0] + lenArray[2] === 10) {
        wordCount = [0, 100];
        break;
      }
      for (i = j = 0, ref = lenArray / 2; 0 <= ref ? j < ref : j > ref; i = 0 <= ref ? ++j : --j) {
        if (lenArray % 2 === 1 && i === Math.floor(lenArray / 2)) {
          tempResult.push(wordCount[i]);
          wordCount = tempResult;
          break;
        }
        sumFirstLast = wordCount[i] + wordCount[lenArray - i - 1];

        /*
        				Determine if sum is less or greater then 10
        				if less then 0 then push int
        				else split both digit and push seperatly
         */
        if (sumFirstLast <= 10) {
          tempResult.push(sumFirstLast);
        } else {
          tempResult.push(1);
          tempResult.push(sumFirstLast % 10);
        }
      }
      wordCount = tempResult;
    }
    return wordCount[0] * 10 + wordCount[1];
  };

}).call(this);
